package WebGUI::Authentication::SMB;

#-------------------------------------------------------------------
# WebGUI is Copyright 2001-2002 Plain Black LLC.
#-------------------------------------------------------------------
# Please read the legal notices (docs/legal.txt) and the license
# (docs/license.txt) that came with this distribution before using
# this software.
#-------------------------------------------------------------------
# http://www.plainblack.com			info@plainblack.com
#-------------------------------------------------------------------~

use strict;
use WebGUI::Session; 
use WebGUI::HTMLForm;
use WebGUI::Authentication;
use Authen::Smb;
use warnings;

my %smbError = (
	1 => 'SMB Server Error (1)<br>Something went wrong accessing the domain controller. Perhaps the connection timed out. Please try again or contact your sysadmin.',
	2 => 'SMB Protocol Error (2)<br>Please contact your sysadmin',
	3 => 'SMB Logon Error (3)<br>You have supplied an invalid username/password pair. Probably a typo, please try again.'
);

#-------------------------------------------------------------------
sub authenticate {
	my ($uid, $password, $userData, $smb, $result);
	$userId = $_[0]->[0];
        $password = $_[0]->[1];
	$userData = WebGUI::Authentication::getParams($uid, 'SMB');

	$smb = Authen::Smb::authen($userData->{smbLogin}, $password, $userData->{smbPDC}, $userData->{smbBDC}, $userData->{smbDomain});
	if ($smb > 0) {
		$result = '<li>'. $smbError{$smb} . <br> ."Login: *$userData->{smbLogin}, PDC: *$userData->{smbPDC}*, BDC: *$userData->{smbBDC}*, Domain: *$userData->{smbDomain}*";
	} else {
		$result = 1;
	}

	return $result;
}

#-------------------------------------------------------------------
sub adminForm {
	my $userData = WebGUI::Authentication::getParams($_[0], 'SMB');
	my $pdc = $session{form}{smbPDC} || $userData->{smbPDC} || $session{setting}{smbPDC};
	my $bdc = $session{form}{smbBDC} || $userData->{smbBDC} || $session{setting}{smbBDC};
	my $domain = $session{form}{smbDomain} || $userData->{smbDomain} || $session{setting}{smbDomain};
	my $login = $session{form}{smbLogin} || $userData->{smbLogin};
	my $f;
	$f = WebGUI::HTMLForm->new;
	$f->readOnly('<b>'.optionsLabel().'</b>');
	$f->text("smbPDC","PDC",$pdc);
	$f->text("smbBDC","BDC",$bdc);
	$f->text("smbDomain","NT Domain",$domain);
	$f->text("smbLogin","NT Login name",$login);
	return $f->printRowsOnly;
}

#-------------------------------------------------------------------
sub adminFormSave {
	WebGUI::Authentication::saveParams($session{form}{uid},'SMB', 
	{
		smbPDC 		=> $session{form}{smbPDC}, 
		smbBDC 		=> $session{form}{smbBDC},
		smbDomain 	=> $session{form}{smbDomain},
		smbLogin 	=> $session{form}{smbLogin}
	});
}

#-------------------------------------------------------------------
sub optionsLabel {
	return "SMB Authentication Options";
}

#-------------------------------------------------------------------
sub registrationForm {
	my $f;
	$f = WebGUI::HTMLForm->new;
	$f->text("loginId","NT Login Id");
	$f->password("smbPassword","NT Password");
	return $f->printRowsOnly;
}

#-------------------------------------------------------------------
sub registrationFormSave {
	my $uid;
	$uid = shift; 
	WebGUI::Authentication::saveParams($uid,'SMB', 
	{
		smbPDC 		=> $session{setting}{smbPDC}, 
		smbBDC 		=> $session{setting}{smbBDC},
		smbDomain 	=> $session{setting}{smbDomain},
		smbLogin 	=> $session{form}{loginId}
	});
}

#-------------------------------------------------------------------
sub registrationFormValidate {
	my ($pdc, $bdc, $ntDomain, $smbLogin, $smb, $error);
        $pdc = $session{setting}{smbPDC};
       	$bdc = $session{setting}{smbBDC};
        $ntDomain = $session{setting}{smbDomain};
        $smbLogin = $session{form}{loginId};
        $smb = Authen::Smb::authen($smbLogin, $session{form}{smbPassword}, $pdc, $bdc, $ntDomain);
        if ($smb > 0) {
                $error = '<li>'. $smbError{$smb} . "pdc: $pdc, bdc: $bdc, domain: $ntDomain";
        }
       	return $error;
}


#-------------------------------------------------------------------
sub settingsForm {
	my $f;
	$f = WebGUI::HTMLForm->new;
	$f->readOnly('<b>'.optionsLabel().'</b>');
	$f->text("smbPDC","PDC",$session{setting}{smbPDC});
	$f->text("smbBDC","BDC",$session{setting}{smbBDC});
	$f->text("smbDomain","NT Domain",$session{setting}{smbDomain});
	return $f->printRowsOnly;
}

#-------------------------------------------------------------------
sub userForm {
	return "";
}

#-------------------------------------------------------------------
sub userFormSave {
}

#-------------------------------------------------------------------
sub userFormValidate {
	return "";
}

1;

